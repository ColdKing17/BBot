const TelegramBot = require('node-telegram-bot-api');
const sqlite = require('sqlite-sync');
const schedule = require('node-schedule');

const token = '740192874:AAG7SAAtsT3d-dOcSL3rTAAG1FCAOW0D2-c';
const bot = new TelegramBot(token, {polling: true});
sqlite.connect('database.db');


////////////variables///////////
var data;
let dickLength;
let money;
let isChecked;

let increaseTime;
let decreaseTime;
let fortuneTime;
let depositTime;
let iconTime;
let collectorsTime;
let clickTime; 

let minDick;
let moneyGives;
let icona;

let increasePrice;
let decreasePrice;
let fortunePrice;
let depositPrice;
let iconPrice;
let collectorsPrice;
let clickPrice;

let increaseValue;
let decreaseValue;
let fortuneValue;
let depositValue;
//////////////////////////////


var everyS = schedule.scheduleJob('0 0 0 * * *', function(){
  var isCheckedTable = sqlite.run("SELECT * FROM IsChecked");
  for (var i = 0; i <= isCheckedTable.length; i++) {
    sqlite.update("IsChecked", {isCheck: true}, isCheckedTable[i]);
  }
});

function update(msg) {
  if (isInTable(msg)) {
    bot.sendMessage(msg.chat.id, '<b>'+msg.from.first_name+'</b>, –≤—ã –Ω–∞—á–∞–ª–∏ –∏–≥—Ä—É "–ü–µ—Å—é–Ω"', {
      reply_to_message_id: msg.message_id, 
      parse_mode: 'HTML'
    });

    sqlite.run("CREATE TABLE IF NOT EXISTS IsChecked (ID INTEGER PRIMARY KEY, IsCheck BOOL);");
    sqlite.insert("IsChecked", {ID: msg.from.id, isCheck: true});

    sqlite.run("CREATE TABLE IF NOT EXISTS Chat"+Math.abs(msg.chat.id)+" (ID INTEGER PRIMARY KEY,\
      dickLength INTEGER,\
      userName TEXT,\
      money INTEGER,\
      \
      increaseTime INTEGER,\
      decreaseTime INTEGER,\
      fortuneTime INTEGER,\
      depositTime INTEGER,\
      iconTime INTEGER,\
      collectorsTime INTEGER,\
      clickTime INTEGER,\
      \
      minDick INTEGER,\
      moneyGives INTEGER,\
      icona BOOL);");
    
    sqlite.insert("Chat"+Math.abs(msg.chat.id), {ID: msg.from.id, dickLength: 0, userName: msg.from.first_name, money: 0, increaseTime: 0, decreaseTime: 0, fortuneTime: 0, depositTime: 0, iconTime: 0, collectorsTime: 0, clickTime: 0, minDick: -5, moneyGives: 1, icona: false});
  }

  data = sqlite.run("SELECT * FROM Chat"+Math.abs(msg.chat.id)+" WHERE ID = "+msg.from.id)[0];
  isCheckedTable = sqlite.run("SELECT * FROM IsChecked WHERE ID = "+msg.from.id)[0];
  
  dickLength = data.dickLength;
  money = data.money;
  isChecked = isCheckedTable.IsCheck;

  increaseTime = data.increaseTime;
  decreaseTime = data.decreaseTime;
  fortuneTime = data.fortuneTime;
  depositTime = data.depositTime;
  iconTime = data.iconTime;
  collectorsTime = data.collectorsTime;
  clickTime = data.clickTime;

  minDick = data.minDick;
  moneyGives = data.moneyGives;
  icona = data.icona;

  increasePrice = (increaseTime+1) * 5;
  decreasePrice = (decreaseTime+1) * 5;
  fortunePrice = (fortuneTime==0?10:fortuneTime*15+10);
  depositPrice = (depositTime==0?15:depositTime*10+15);
  iconPrice = (iconTime==0?15:iconTime*5+15);
  collectorsPrice = (collectorsTime==0?10:collectorsTime*15+10);
  clickPrice = (clickTime+1) * 100;

  increaseValue = (increaseTime+1) * 5;
  decreaseValue = (decreaseTime+1) * 8;
  fortuneValue = (fortuneTime==0?0:fortuneTime*2);
  depositValue = (depositTime==0?0:depositTime*0.5);
}
///////////////////////////////







bot.on('message', (msg) => { 
  const chatId = msg.chat.id;
  const text = msg.text;
  const userId = msg.from.id;

  if (text == '/start_dick@servetnikBot' || text == '/start_dick') { //Start game
    update(msg);
    bot.sendMessage(chatId, 'BBot', {
      reply_to_message_id: msg.message_id,
      parse_mode: 'HTML',
      reply_markup: {
        resize_keyboard: true,
  
        keyboard: [
          [
            {
              text: 'üìèPlay',
              callback_data: 'play'
            }
          ],
          [
            {
              text: 'üìäTop',
              callback_data: 'top'
            },
            {
              text: 'üè¶Shop',
              callback_data: 'shop'
            },
            {
              text: 'üîçRules',
              callback_data: 'rules'
            }
          ]
        ]
      }
    });
}
  
  else if (text == '/stickers@servetnikBot' || text == '/stickers') { //Stickers
    bot.sendMessage(chatId, '<b>–°—Ç–∏–∫–µ—Ä—ã:</b> https://t.me/addstickers/servetnik', {
      reply_to_message_id: msg.message_id, 
      parse_mode: 'HTML'
    });
  }

  else if (text == '/help@servetnikBot' || text == '/help') { //Help
    bot.sendMessage(chatId, '<b>–ü–æ–º–æ—â—å:</b>\n\n'+
      '–ö–æ–º–∞–Ω–¥—ã:\n'+
      '/play_dick - –ù–∞—á–∞—Ç—å –≤ –∏–≥—Ä—É "–ü–µ—Å—é–Ω"\n'+  
      '    Play - –°—ã–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É "–ü–µ—Å—é–Ω"\n'+
      '    Top - –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –≤ –∏–≥—Ä–µ "–ü–µ—Å—é–Ω"\n'+
      '    Shop - –ú–∞–≥–∞–∑–∏–Ω –∏–≥—Ä—ã "–ü–µ—Å—é–Ω"\n'+
      '    Rules - –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã "–ü–µ—Å—é–Ω"\n'+
      
      '/stickers - –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∏–∫–µ—Ä—ã\n'+

      '/help - –ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å\n\n'+
      
      'GitGub: https://github.com/ColdKing17', {
      reply_to_message_id: msg.message_id, 
      parse_mode: 'HTML'
    });
  }



  else if (text == 'üìèPlay') { //Play
    update(msg);
    if (isChecked) {
      let resultDickNum = randomNum(-5+fortuneValue, 10, true);
      sqlite.update('Chat'+Math.abs(msg.chat.id), {dickLength: dickLength+=resultDickNum, money: money+=1+depositValue}, {ID: userId});

      bot.sendMessage(msg.chat.id, '<b>'+msg.from.first_name+'</b>, –≤–∞—à –ø–µ—Å—é–Ω '+(resultDickNum>0?'—É–≤–µ–ª–∏—á–∏–ª—Å—è':'—É–º–µ–Ω—à–∏–ª—Å—è')+' –Ω–∞ '+Math.abs(resultDickNum)+'—Å–º. —Ç–µ–ø–µ—Ä—å –µ–≥–æ –¥–ª–∏–Ω–∞:'+dickLength+'—Å–º. –ò –≤—ã –ø–æ–ª—É—á–∏–ª–∏ '+(1+depositValue)+'–≥—Ä–Ω. —É –≤–∞—Å —Ç–µ–ø–µ—Ä—å: '+money+'–≥—Ä–Ω.', {
        reply_to_message_id: msg.message_id, 
        parse_mode: 'HTML'
      });

      sqlite.update("IsChecked", {isCheck: false}, {id: userId});
    } else {
      bot.sendMessage(msg.chat.id, '<b>'+msg.from.first_name+'</b>, –≤—ã —É–∂–µ –∏–≥—Ä–∞–ª–∏ —Å–µ–≥–æ–¥–Ω—è', {
        reply_to_message_id: msg.message_id, 
        parse_mode: 'HTML'
      });
    }
  }

  else if (text == 'üè¶Shop') { //Shop catalog
    update(msg);
    bot.sendMessage(msg.chat.id, '<b>–ú–∞–≥–∞–∑–∏–Ω:</b>\n\n'+
    '<i>–£–≤–µ–ª–∏—á–µ–Ω–∏–µ</i>¬†-¬†'+increasePrice+'–≥—Ä–Ω.\n'+
    '    –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≤–∞–º –ø–µ—Å—é–Ω –Ω–∞ '+increaseValue+'—Å–º. \n'+
    '    –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å: /increase \n\n'+
    
    '<i>–£–º–µ–Ω—å—à–µ–Ω–∏–µ</i>¬†-¬†'+decreasePrice+'–≥—Ä–Ω.\n'+
    '    –£–º–µ–Ω—à–∞–µ—Ç –ª—é–±–æ–º—É –∏–≥—Ä–æ–∫—É –∏–∑ –≥—Ä—É–ø–ø—ã –ø–µ—Å—é–Ω –Ω–∞ '+decreaseValue+'—Å–º. \n'+
    '    –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å: /decrease \n\n'+
    
    '<i>–§–æ—Ä—Ç—É–Ω–∞</i>¬†-¬†'+fortunePrice+'–≥—Ä–Ω.\n'+
    '    –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≤–∞–º —à–∞–Ω—Å —É–≤–µ–ª–∏—á–µ–Ω–∏—è –ø–µ—Å—é–Ω–∞\n'+
    '    –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å: /fortune \n\n'+
    
    '<i>–î–µ–ø–æ–∑–∏—Ç</i>¬†-¬†'+depositPrice+'–≥—Ä–Ω.\n'+
    '    –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≤–∞–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–∞—á–∏ –≥—Ä–Ω. \n'+
    '    –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å: /deposit \n\n'+
    
    '<i>–ò–∫–æ–Ω–∞</i>¬†-¬†'+iconPrice+'–≥—Ä–Ω.\n'+
    '    –ó–∞—â–∏—â–∞–µ—Ç –≤–∞—Å –æ—Ç —á—É–∂–∏—Ö ??? \n'+
    '    –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å: /icon \n\n'+
    
    '<i>–ö–æ–ª–ª–µ–∫—Ç–æ—Ä—ã</i>¬†-¬†'+collectorsPrice+'–≥—Ä–Ω.\n'+
    '    –ó–∞–±–µ—Ä–∞–µ—Ç –≤—Å–µ –≥—Ä–Ω. —É –ª—é–±–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –∏–∑ –≥—Ä—É–ø–ø—ã \n'+
    '    –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å: /collectors \n\n'+
    
    '<i>–©–µ–ª—á–æ–∫ –¢–∞–Ω–æ—Å–∞</i>¬†-¬†'+clickPrice+'–≥—Ä–Ω.\n'+
    '    –ê–Ω—É–ª–∏—Ä—É–µ—Ç —Ä–∞–∑–º–µ—Ä –ø–µ—Å—é–Ω–∞ —É –ø–æ–ª–æ–≤–∏–Ω–∏ –∏–≥—Ä–æ–∫–æ–≤ –∏–∑ –≥—Ä—É–ø–ø—ã (–∫—Ä–æ–º–µ –≤–∞—Å) \n'+
    '    –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å: /click', {
      reply_to_message_id: msg.message_id, 
      parse_mode: 'HTML'
    });
  }

  else if (text == 'üìäTop') { //Top
    update(msg);
    let table = sqlite.run("SELECT * FROM Chat"+Math.abs(msg.chat.id));
    let top = '';
    let arr;
    arr = table.sort(function(a, b) {
      return b.dickLength - a.dickLength;
    });

    for (var i = 0; i < arr.length; i++) {
      top += i+1+'. '+arr[i].userName+' - '+arr[i].dickLength+'—Å–º. '+arr[i].money+'–≥—Ä–Ω. \n\n'
    }

    bot.sendMessage(chatId, '<b>–¢–æ–ø:</b>\n\n'+top, {
      reply_to_message_id: msg.message_id, 
      parse_mode: 'HTML'});
  }

  else if (text == 'üîçRules') { //Rules
    bot.sendMessage(chatId, '<b>–ü—Ä–∞–≤–∏–ª–∞:</b>\n\n'+
    '–°–º—ã—Å–ª:\n'+
    '–ò–≥—Ä–∞ "–ü–µ—Å—é–Ω" - —ç—Ç–æ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–∞—è –∏–≥—Ä–∞, —Å–º—ã—Å–ª –∫–æ—Ç–æ—Ä–æ–π –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ–±—ã –Ω–∞–±—Ä–∞—Ç—å —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π –ü–µ—Å—é–Ω.\n\n'+
    
    '–ö–∞–∫ –∏–≥—Ä–∞—Ç—å:\n'+
    '–ö–∞–∂–¥—ã–π –¥–µ–Ω—å, –≤—ã –º–æ–∂–µ—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –≤ —ç—Ç—É –∏–≥—Ä—É –∏ —É–≤–µ–ª–∏—á–∏—Ç—å/—É–º–µ–Ω—å—à–∏—Ç—å —Ä–∞–∑–º–µ—Ä —Å–≤–æ–µ–≥–æ\
    –ø–µ–Ω–∏—Å–∞(—á–∏—Å–ª–æ –≤—ã–±–µ—Ä–µ—Ç—Å—è —Ä–∞–Ω–¥–æ–º–Ω–æ, –æ—Ç -5, –¥–æ +10). –¢–∞–∫–∂–µ –≤–∞–º –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –≥—Ä–∏–≤–Ω–∞, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω–µ.', {
      reply_to_message_id: msg.message_id, 
      parse_mode: 'HTML'
    });
  }

  
  else if (text == '/increase') {
    update(msg);
    if (increasePrice <= money) {
      sqlite.update('Chat'+Math.abs(msg.chat.id), {increaseTime: increaseTime+1, money: money-=increasePrice, dickLength: dickLength+=increaseValue}, {ID: userId});

      bot.sendMessage(chatId, '<b>'+msg.from.first_name+'</b>, –≤–∞—à –ø–µ—Å—é–Ω —É–≤–µ–ª–∏—á–∏–ª—Å—è –Ω–∞ '+increaseValue+'—Å–º. –¢–µ–ø–µ—Ä—å –µ–≥–æ –¥–ª–∏–Ω–Ω–∞: '+dickLength+'—Å–º. –í—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ '+increasePrice+'–≥—Ä–Ω. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å: '+money+'–≥—Ä–Ω.', {
        reply_to_message_id: msg.message_id, 
        parse_mode: 'HTML'
      });
    } else {
      bot.sendMessage(chatId, '<b>'+msg.from.first_name+'</b>, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥', {
        reply_to_message_id: msg.message_id, 
        parse_mode: 'HTML'
      });
    }
  }

  else if (text == '/decrease') {
    update(msg);
    if (decreasePrice <= money) {
      sqlite.update('Chat'+Math.abs(msg.chat.id), {decreaseTime: decreaseTime+1, money: money-=decreasePrice}, {ID: userId});

      var tableLength = sqlite.run("SELECT * FROM Chat"+Math.abs(msg.chat.id));
      var randomResult = randomNum(0, tableLength.length-1, false);

      var person = tableLength[randomResult];

      if (person.iconTime >= 1) {
        sqlite.update('Chat'+Math.abs(msg.chat.id), {iconTime: person.iconTime-1}, {ID: person.ID});
        bot.sendMessage(chatId, '<b>'+msg.from.first_name+'</b>, —É '+person.userName+', –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –±—ã–ª–∞ –∏–∫–æ–Ω–∞, —Ç–∞–∫ —á—Ç–æ –æ–Ω –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ—Ç–µ—Ä—è–ª. –í—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ '+decreasePrice+'–≥—Ä–Ω. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å: '+money+'–≥—Ä–Ω.', {
          reply_to_message_id: msg.message_id, 
          parse_mode: 'HTML'
        });
      } else {
        sqlite.update('Chat'+Math.abs(msg.chat.id), {dickLength: person.dickLength-=decreaseValue}, {ID: person.ID});

        bot.sendMessage(chatId, '<b>'+msg.from.first_name+'</b>, —É '+person.userName+' –ø–µ—Å—é–Ω —É–º–µ–Ω—à–∏–ª—å—Å—è –Ω–∞ '+decreaseValue+'—Å–º. –¢–µ–ø–µ—Ä—å –µ–≥–æ –¥–ª–∏–Ω–Ω–∞: '+person.dickLength+'—Å–º. –í—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ '+decreasePrice+'–≥—Ä–Ω. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å: '+money+'–≥—Ä–Ω.', {
          reply_to_message_id: msg.message_id, 
          parse_mode: 'HTML'
        });
      }
    } else {
      bot.sendMessage(chatId, '<b>'+msg.from.first_name+'</b>, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥', {
        reply_to_message_id: msg.message_id, 
        parse_mode: 'HTML'
      });
    }
  }

  else if (text == '/fortune') {
    update(msg);
    if (fortunePrice <= money) {
      sqlite.update('Chat'+Math.abs(msg.chat.id), {fortuneTime: fortuneTime+1, money: money-=fortunePrice}, {ID: userId});

      bot.sendMessage(chatId, '<b>'+msg.from.first_name+'</b>, —É –≤–∞—Å —É–≤–µ–ª–∏—á–∏–ª–æ—Å—å –≤–µ–∑–µ–Ω–∏–µ', { 
        reply_to_message_id: msg.message_id, 
        parse_mode: 'HTML'
      });
    } else {
      bot.sendMessage(chatId, '<b>'+msg.from.first_name+'</b>, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥', {
        reply_to_message_id: msg.message_id, 
        parse_mode: 'HTML'
      });
    }
  }

  else if (text == '/deposit') {
    update(msg);
    if (depositPrice <= money) {
      sqlite.update('Chat'+Math.abs(msg.chat.id), {depositTime: depositTime+1, money: money-=depositPrice}, {ID: userId});

      bot.sendMessage(chatId, '<b>'+msg.from.first_name+'</b>, –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –±–æ–ª—å—à–µ –¥–µ–Ω–µ–≥', {
        reply_to_message_id: msg.message_id, 
        parse_mode: 'HTML'
      });
    } else {
      bot.sendMessage(chatId, '<b>'+msg.from.first_name+'</b>, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥', {
        reply_to_message_id: msg.message_id, 
        parse_mode: 'HTML'
      });
    }
  }

  else if (text == '/icon') {
    update(msg);
    if (iconPrice <= money) {
      sqlite.update('Chat'+Math.abs(msg.chat.id), {iconTime: iconTime+1, money: money-=iconPrice}, {ID: userId});
      bot.sendMessage(chatId, '<b>'+msg.from.first_name+'</b>, —É –≤–∞—Å –ø–æ—è–≤–∏–ª–∞—Å—å –∏–∫–æ–Ω–∞', {
        reply_to_message_id: msg.message_id, 
        parse_mode: 'HTML'
      });
    } else {
      bot.sendMessage(chatId, '<b>'+msg.from.first_name+'</b>, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥', {
        reply_to_message_id: msg.message_id, 
        parse_mode: 'HTML'
      });
    }
  }

  else if (text == '/collectors') { 
    update(msg);
    if (collectorsPrice <= money) {
      sqlite.update('Chat'+Math.abs(msg.chat.id), {collectorsTime: collectorsTime+1, money: money-=collectorsPrice}, {ID: userId});

      var tableLength = sqlite.run("SELECT * FROM Chat"+Math.abs(msg.chat.id));
      var randomResult = randomNum(0, tableLength.length-1, false);

      var person = tableLength[randomResult];

      if (person.iconTime >= 1) {
        sqlite.update('Chat'+Math.abs(msg.chat.id), {iconTime: person.iconTime-1}, {ID: person.ID});
        bot.sendMessage(chatId, '<b>'+msg.from.first_name+'</b>, —É '+person.userName+', –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –±—ã–ª–∞ –∏–∫–æ–Ω–∞, —Ç–∞–∫ —á—Ç–æ –æ–Ω –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ—Ç–µ—Ä—è–ª. –í—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ '+collectorsPrice+'–≥—Ä–Ω. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å: '+money+'–≥—Ä–Ω.', {
          reply_to_message_id: msg.message_id, 
          parse_mode: 'HTML'
        });
      } else {
        sqlite.update('Chat'+Math.abs(msg.chat.id), {money: 0}, {ID: person.ID});

        bot.sendMessage(chatId, '<b>'+msg.from.first_name+'</b>, –∫ '+person.userName+' –ø—Ä–∏—à–ª–∏ –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–∏', {
          reply_to_message_id: msg.message_id, 
          parse_mode: 'HTML'
        });
      }
    } else {
      bot.sendMessage(chatId, '<b>'+msg.from.first_name+'</b>, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥', {
        parse_mode: 'HTML'
      });
    }
  }

  else if (text == '/click') {
    update(msg);

    var tableLength = sqlite.run("SELECT * FROM Chat"+Math.abs(msg.chat.id));
    if (tableLength.length < 2) {
      console.log(123)
      bot.sendMessage(chatId, '<b>'+msg.from.first_name+'</b>, –≤ –≥—Ä—É–ø–ø–µ —Ç–æ–ª—å–∫–æ 1 —á–µ–ª–æ–≤–µ–∫', {
        reply_to_message_id: msg.message_id, 
        parse_mode: 'HTML'
      });
      return false;
    }

    if (clickPrice <= money) {

      sqlite.update('Chat'+Math.abs(msg.chat.id), {clickTime: clickTime+1, money: money-=clickTime}, {ID: userId});
      let killed = '';
      
      var tableLength = sqlite.run("SELECT * FROM Chat"+Math.abs(msg.chat.id));
      var lengthLeft = Math.floor(tableLength.length/2);
      while (lengthLeft != 0) {
        var randomResult = randomNum(0, tableLength.length-1, false);
        var person = tableLength[randomResult];
        if (person.ID != userId) {
          if (person.iconTime >= 1) {
            sqlite.update('Chat'+Math.abs(msg.chat.id), {iconTime: person.iconTime-1}, {ID: person.ID});
            bot.sendMessage(chatId, '<b>'+msg.from.first_name+'</b>, —É '+person.userName+', –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –±—ã–ª–∞ –∏–∫–æ–Ω–∞, —Ç–∞–∫ —á—Ç–æ –æ–Ω –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ—Ç–µ—Ä—è–ª. –í—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ '+collectorsPrice+'–≥—Ä–Ω. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å: '+money+'–≥—Ä–Ω.', {
              reply_to_message_id: msg.message_id, 
              parse_mode: 'HTML'
            });
          } else {
            killed += person.userName+'; ';
            sqlite.delete("Chat"+Math.abs(msg.chat.id), {ID: person.ID});
          }
        }
        lengthLeft--;
      }
      bot.sendMessage(chatId, '<b>'+msg.from.first_name+'</b>, '+killed+' –ø—Ä–µ–≤—Ä–∞—Ç–∏–ª–∞—Å—å –≤ –ø–µ–ø–µ–ª', {
        reply_to_message_id: msg.message_id, 
        parse_mode: 'HTML'
      });
    } else {
      bot.sendMessage(chatId, '<b>'+msg.from.first_name+'</b>, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥', {
        reply_to_message_id: msg.message_id, 
        parse_mode: 'HTML'
      });
    }
  }
});




function randomNum(min, max, isNull) {
  let result = Math.floor(Math.random() * (max+1 - min) + min); //Random num in range from "min" to "max"
    
    if (isNull) {
      if (result == 0) {
        return randomNum(min, max, true);
      } else {
        return result;
      }
    }
    return result;
}

function isInTable(msg) {
  chatId = msg.chat.id;
  userId = msg.from.id;

  var table = sqlite.run("SELECT * FROM Chat"+Math.abs(msg.chat.id)+" WHERE ID = "+userId);
  if (!table.length) {
    return true;
  }
  return false;
}

bot.on("message", (msg) => {
  if (msg.text == "/delete") {
    bot.getChatMember(msg.chat.id, msg.from.id).then(function(data) {
      if ((data.status == "creator")){
        var table = sqlite.run("SELECT * FROM Chat"+Math.abs(msg.chat.id));
        for (var i = 0; i <= table.length; i++) {
          sqlite.delete("Chat"+Math.abs(msg.chat.id), table[i]);
        }
        bot.sendMessage(msg.chat.id, "–ò–≥—Ä–∞ –±—ã–ª–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞");
      }else{
        bot.sendMessage(msg.chat.id, "–í—ã –Ω–µ —Å–æ–∑–¥–∞—Ç–µ–ª—å");
      }
    });
  }
});